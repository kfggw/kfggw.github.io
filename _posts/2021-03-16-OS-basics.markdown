---
layout: post
title: 2021-03-16-进程同步与互斥
---

## 为什么会需要进程的同步和互斥?

1. 同步. 有些计算任务之间存在某种形式的依赖关系, 在实际程序运行过程中,
   必须要保证这种逻辑上的依赖关系, 保证被依赖的计算任务先执行完毕, 得
   到计算结果之后再进行后续计算.
2. 互斥. 对某种资源的使用, 必须采用独占的方式, 即一个进程占有资源之后,
   另一个进程必须等到当前进程使用完成并释放资源, 才能占有资源. 典型的
   设备比如打印机, 必须采用独占式的共享使用.

## 如何实现进程的同步与互斥?

信号量机制:

信号量包含一个整数s, 一个P操作, 一个V操作. P操作在s <= 0时循环等待, 否
则进行s = s - 1操作; V操作执行s = s + 1操作; P和V的操作是原子的, 不会
被打断.

典型的同步与互斥问题:

1) 生产者消费者问题
2) 哲学家就餐问题
3) Reader/Writer问题

理解:
信号量可以看成是一种资源的计数.

## 死锁

死锁的必要条件:

1) 互斥
2) 占有等待
3) 不可剥夺
4) 循环等待

从上述必要条件谈防止死锁:

1) 互斥:
	资源共享使用
2) 占有等待:
	不占有: 在申请新资源的时候, 释放已经占有的资源
	不等待: 一次分配全部需要的资源	
3) 不可剥夺:
	由操作系统在死锁发生时, 剥夺某个进程占有的资源
4) 循环等待:
	将资源编号, 分配的资源只能从小号到大号, 否则分配失败
	
死锁避免:
	银行家算法
