---
title: GNU make
layout: post
---

[TOC]

## What is GNU make?

GNU make是类Unix平台下管理软件构建过程的工具, 作者是理查德.斯托曼.
make的工作实际上有Makefile驱动, Makefile定义了软件项目中各种文件, 中间
结果之间的依赖关系, 以及为了生成某个目标需要执行的命令.

Target: Dependencies
	Commands

在执行构建过程时, make负责解释Makefile文件的内容, 从数据结构的角度看,
Makefile实际上定义了一个有向图, 图中的节点可以是构建过程中涉及到的中间
文件, 源代码文件或者伪目标, 图中的边从Dependency指向Target, 在用户需要
构建某个Target的时候, make会计算出全部的依赖关系, 按照拓扑排序结果, 从
最开始的源代码文件构建出最终需要的Target.

在make中, 通常情况下, 当Dependency的最后修改时间比Target的最后修改时间
更大时, 对应的规则会被执行, 也可以指定二者之间是order-only的关系, 即只
要Dependency都存在, 就不会重新构建Target, 而不考虑二者之间的最后修改时
间的关系.

从程序设计语言的角度看, make应该是一种解释型语言, 支持一种特殊的语法规
则, 可以定义变量, 不过make中的变量都是字符串, 支持条件控制语句, 循环语
句, 支持子程序调用. make可以看成是一种领域专用语言, 专门用于控制关键的
构建流程. 和CMake相比, make对构建过程的控制更接近底层, 直接控制文件之
间的依赖关系, 而CMake相对而言抽象层次更高一点, 使用CMake生成对应平台下
的Makefile时, 可以看成是一个翻译的过程, 即从CMake的源文件CMakefile翻译
成了Makefile, 同时CMake处理了和具体平台相关的工作. 由此可见, 掌握编译
原理还是很有必要的, 至少可以让你看问题的角度和更过一点.