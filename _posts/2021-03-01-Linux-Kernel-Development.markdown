---
layout: post
title: Linux Kernel Development
---

[TOC]

## 进程管理

1. 什么是进程

2. 内核如何描述进程

3. 进程的生命周期

4. 进程之间的关系

5. 如何创建进程

6. 内核中的线程如何实现

7. 如何终结进程

## 进程调度

1. 解决什么问题
   保证系统的响应时间, 提高CPU的利用率

2. 不同类型的进程
   - IO密集
   - CPU密集

3. 不同的调度算法

## 系统调用

1. 为什么需要系统调用?
   - 提供给上层的应用程序抽象的接口, 避免直接面对硬件的复杂性
   - 把应用程序和内核分离开, 保证系统的安全卡靠

2. 系统调用的工作过程
   1) 用户请求系统调用
      - 系统调用号  --> 体系架构相关的寄存器
      - 系统调用参数 --> 体系架构相关的寄存器
   2) 产生软中断
   3) 进入系统调用中断处理程序
   4) 根据系统调用号转到对应的处理程序
   5) 取出寄存器中的参数, 执行系统调用